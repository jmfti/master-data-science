shiny::runApp('C:/Users/javi/OneDrive - UNED/Master data science/repo/modelado estadistico de datos/prueba shiny/prueba')
install.packages("plotly")
library(plotly)
library(tidymodels)
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("rlang")
install.packages("rlang")
library(esquisse)
setwd("C:/Users/javi/OneDrive - UNED/Master data science/repo/modelado estadistico de datos/tema 2 riesgos")
df = read.table("d_d_3.txt")
df
tabla = table(df)
tabla
as.table(df)
df
df = read.table("d_d_3.txt", header=T)
as.table(df)
table(df)
tabla = table(df)
tabla[exp == 1]
tabla[0]
tabla[rta[1]
tabla[rta[1]]
tabla[rta[1]]
tabla[rta == 1]
tabla[0]
tabla[0,]
tabla[]
tabla[1]
tabla[2]
tabla[3]
tabla[4]
tabla$exp
tabla[exp]
tabla[1,]
tabla
tabla[1,]
tabla[2,]
tabla[1,]
tabla[1,][1]
tabla[1,]
tabla[,0]
tabla[1]
tabla[2]
tabla
tabla[which(exp == 1)]
tabla[which(exp==1)]
library(dplyr)
df %>% group_by(exp) %>% summarise(sum)
df
count(df$exp == 0)
count(df$exp)
df$exp
sum(df$exp)
length(df$exp)
sum(df$exp == 0)
sum(df$exp == 1)
sum(df$exp == 1 & df$rta == 0)
sum(df$exp == 1 & df$rta == 1) / sum(df$exp == 1)
df
df$rta[df$exp == 1]
mean(df$rta[df$exp == 1])
var(df$rta[df$exp == 1])
logit(0.33)
pnorm(0.05)
qnorm(0.05)
qnorm(0.025)
qnorm(1 - 0.05 / 2)
qnorm(1 - 0.05 / 2)
df = read.table("d_d_3.txt", header = T)
tabla = table(df)
# proporcion muestral exp1
alpha = 0.05
p1 = mean(df$rta[df$exp == 0]); p1
p2 = mean(df$rta[df$exp == 1]); p2
dr = p2 - p1; dr
var_dr = p1 * (1 - p1) / sum(df$exp == 1) + p2 * (1 - p2) / sum(df$exp == 0); var_dr
error_estandar_dr = sqrt(var_dr); error_estandar_dr
# ic
icinf = dr - qnorm(1 - alpha / 2) * error_estandar_dr; icinf
icsup = dr + qnorm(1 - alpha / 2) * error_estandar_dr; icsup
dr
dr / error_estandar_dr
prop.test(table(df), correct=F)
