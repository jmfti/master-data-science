install.packages(c("xlsx", "dplyr", "stringr", "lubridate", "ggplot2", "ggvis", "dygraph", "DT", "diagrammeR", "mgcv", "lme4", "nlme", "randomForest", "vcd", "caret", "rmarkdown", "xtable", "data.table","XML","jsonlite"))
x = runif(100, 0, 10)
y1 = 1/(2*x)
y2 = 1/(5*x)
plot(x, y)
plot(x, y1)
y1 = 2*x
y2 = 5*x
plot(x, y1)
plot(x, round(y1))
plot(x, round(y2))
plot(x, y1, "lines")
plot(x, y1, "l")
help(plot)
lines(x, y1)
lines(x, y2)
plot(x, y1, type="l")
order(x)
order(x)
plot(order(x))
sort(x)
sort(x)
x
x = sort(x)
y1 = 2*x
y2 = 5*x
y1 = (1/2)*x
y2 = (1/5)*x
plot(x, y1)
plot(x, y1, type="l")
plot(x, round(y1), type="l")
plot(x, round(y2), type="l")
plot(x, round(y1), type="l")
lines(x, round(y2))
mean(y1 - y2)
mean(y1) - mean(y2)
abline(v = 8.5, col="red")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
like
max(like)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("simmer")
library("simmer")
library(dplyr)
library(data.table)
library(ggplot2)
library(knitr)
library(markdown)
library(rmarkdown)
library(XML)
library(xtable)
detach("package:xtable", unload = TRUE)
library(zoo)
library(MASS, lib.loc = "C:/Program Files/R/R-3.6.0/library")
library(nlme, lib.loc = "C:/Program Files/R/R-3.6.0/library")
library(splines, lib.loc = "C:/Program Files/R/R-3.6.0/library")
install.packages("mc2d")
install.Rtools()
plot(density(runif(100,0,1)*3))
plot(density(runif(100,0,1)*3))
plot(density(runif(100,0,1)*3))
plot(density(runif(100,0,1)*3))
plot(hist(runif(100,0,1)*3))
plot(hist(runif(100,0,1)*3))
plot(hist(runif(100,0,1)*3))
plot(round(hist(runif(100,0,1)*3))
)
plot(hist(round(runif(100,0,1)*3)))
plot(hist(round(runif(100,0,1)*3)))
plot(hist(round(runif(100,0,1)*3)))
plot(hist(round(runif(100,0,1)*3)))
plot(hist(round(runif(100,0,1)*3)))
plot(hist(round(runif(100,0,1)*3)))
plot(hist(round(runif(100,0,1)*3)))
plot(hist(round(runif(100,0,1)*3)))
plot(hist(round(runif(100,0,1)*3)))
plot(hist(round(runif(100,0,1)*3)))
plot(hist(round(runif(10000,0,1)*3)))
plot(hist(round(runif(10000,0,1)*3)))
plot(hist(round(runif(10000,0,1)*3)))
plot(hist(round(runif(10000,0,1)*3)))
plot(hist(round(runif(10000,0,1)*3)))
plot(hist(round(0.5 + runif(1000, 0, 1) * 3)))
plot(hist(round(0.5 + runif(1000, 0, 1) * 3)))
plot(hist(round(0.5 + runif(1000, 0, 1) * 3)))
plot(hist(round(0.5 + runif(1000, 0, 1) * 3)))
plot(hist(round(0.5 + runif(1000, 0, 1) * 3)))
plot(hist(round(0.5 + runif(1000, 0, 1) * 3)))
plot(hist(round(0.5 + runif(1000, 0, 1) * 3)))
plot(hist(round(0.5 + runif(1000, 0, 1) * 3)))
datostiempos <- read.csv("~/datostiempos.csv")
View(datostiempos)
datostiempos2 <- read.csv("~/datostiempos2.csv")
View(datostiempos2)
require("ggplot2")
ggplot2(datostiempos2) + geom_jitter()
install.packages("ggplot2")
ggplot(datostiempos2) + geom_jitter()
ggplot(datostiempos2) + geom_jitter(x=unidades, y=tiempo_ejecucion)
ggplot(datostiempos2) + geom_jitter(x=UNIDADES, y=tiempo_ejecucion)
ggplot(datostiempos2) + geom_jitter(UNIDADES, tiempo_ejecucion)
ggplot(data=datostiempos2) + geom_jitter(UNIDADES, tiempo_ejecucion)
ggplot(data=datostiempos2, aes(x=UNIDADES, y=tiempo_ejecucion)) + geom_jitter()
ggplot(data=datostiempos2, aes(x=UNIDADES, y=TIEMPO_EJECUCION)) + geom_jitter()
ggplot(data=datostiempos2, aes(x=UNIDADES, y=TIEMPO_EJECUCION)) + geom_abline()
ggplot(data=datostiempos2, aes(x=UNIDADES, y=TIEMPO_EJECUCION)) + geom_line()
ggplot(data=datostiempos2, aes(x=UNIDADES, y=TIEMPO_EJECUCION)) + geom_smooth()
dat = read.csv("C:/Users/javi/Documents/unidades.csv")
plot(density(dat))
plot(density(dat, x=UNIDADES))
head(dat)
density(dat)
help("density")
density(dat$UNIDADES)
plot(density(dat$UNIDADES))
help("density")
help("plot")
plot(density(dat$UNIDADES, cut=30))
plot(density(dat$UNIDADES), xlim=100)
plot(density(dat$UNIDADES), xlim=range(1,100))
plot(density(dat$UNIDADES), xlim=range(0,500))
density(dat$UNIDADES)
dat2 = read.csv("C:/Users/javi/Documents/unidades2.csv")
density(dat2$UNIDADES)
plot(density(dat2$UNIDADES), xlim=range(1,100))
plot(density(dat2$UNIDADES), xlim=range(0,500))
df = data.frame(c(prueba1=dat2$UNIDADES, prueba2=dat$UNIDADES))
head(df)
df = data.frame(prueba1=dat2$UNIDADES, prueba2=dat$UNIDADES)
ggplot(data, aes(x=dat$UNIDADES)) + geom_density()
ggplot(dat, aes(x=UNIDADES)) + geom_density()
ggplot(dat, aes(x=UNIDADES)) + geom_density() + xlim(c(0,500))
ggplot(dat, aes(x=UNIDADES)) + geom_density() + xlim(c(0,300))
ggplot(dat2, aes(x=UNIDADES)) + geom_density() + xlim(c(0,300))
ggplot(dat2, aes(x=UNIDADES)) + boxplot() + xlim(c(0,300))
ggplot(dat2, aes(x=UNIDADES)) + geom_boxplot()
summary(density(dat$UNIDADES))
density(dat$UNIDADES)
density(dat2$UNIDADES)
ggplot() + geom_density(data=dat, aes(x=UNIDADES)) + geom_density(data=dat2, aes(x=UNIDADES))
ggplot() + geom_density(data=dat, aes(x=UNIDADES), color="red") + geom_density(data=dat2, aes(x=UNIDADES), color="blue")
ggplot() + geom_density(data=dat, aes(x=UNIDADES), color="red") + geom_density(data=dat2, aes(x=UNIDADES), color="blue") + xlim(c(0,500))
ggplot() + geom_density(data=dat, aes(x=UNIDADES), color="red") + geom_density(data=dat2, aes(x=UNIDADES), color="blue") + xlim(c(0,300))
ggplot() + stat_ecdf(data=dat, aes(x=UNIDADES), color="red") + stat_ecdf(data=dat2, aes(x=UNIDADES), color="blue")
ggplot() + stat_ecdf(data=dat, aes(x=UNIDADES), color="red") + stat_ecdf(data=dat2, aes(x=UNIDADES), color="blue") + xlim(c(0,300))
ggplot() + stat_ecdf(data=dat, aes(x=UNIDADES), color="red") + stat_ecdf(data=dat2, aes(x=UNIDADES), color="blue") + xlim(c(0,300)) +  scale_y_continuous(n.breaks=100)
ggplot() + stat_ecdf(data=dat, aes(x=UNIDADES), color="red") + stat_ecdf(data=dat2, aes(x=UNIDADES), color="blue") + xlim(c(0,300)) +  scale_y_continuous(breaks=100)
ggplot() + stat_ecdf(data=dat, aes(x=UNIDADES), color="red") + stat_ecdf(data=dat2, aes(x=UNIDADES), color="blue") + xlim(c(0,300)) +  scale_y_continuous(breaks=range(1,100))
ggplot() + stat_ecdf(data=dat, aes(x=UNIDADES), color="red") + stat_ecdf(data=dat2, aes(x=UNIDADES), color="blue") + xlim(c(0,300)) +  scale_y_continuous(by=1)
range(1,100)
range(1,100. by=1)
xrange(100)
seq(from=1,to=100)
ggplot() + stat_ecdf(data=dat, aes(x=UNIDADES), color="red") + stat_ecdf(data=dat2, aes(x=UNIDADES), color="blue") + xlim(c(0,300)) +  scale_y_continuous(breaks=seq(1,100))
ggplot() + stat_ecdf(data=dat, aes(x=UNIDADES), color="red") + stat_ecdf(data=dat2, aes(x=UNIDADES), color="blue") + xlim(c(0,300))
summary(dat$UNIDADES)
quantile(dat2$UNIDADES)
quantile(dat$UNIDADES)
hoy <- read.csv("~/datostiempos.csv")
View(datostiempos)
hoy <- read.csv("~/unidades.csv")
ayer <- read.csv("~/unidades2.csv")
quantile(hoy)
quantile(hoy$UNIDADES)
quantile(ayer$UNIDADES)
tabla = data.frame(c(tÃ§))
tabla = data.frame(c(t=c()))
View(tabla)
tabla = data.frame(c(t=c(1)))
tabla = data.frame(t=c())
tabla = data.frame(t=c(1))
library(dplyr)
install.packages("esquisse")
install.packages("esquisse")
install.packages("lawstat")
sabado = c(9,128,149,3,2,16,76,122,232,2,7,122,72,31,70,1430,51,73,77,4,2,329,14)
lunes = c(8,89,307,14,12,107,159,87,226,6,5,88,157,89,143,1090,79,148,140,4,4,214,21)
chisq.test(sabado, lunes, correct=F, conf.level=0.95)
chisq.test(sabado, lunes, correct=F)
chisq.test(sabado, lunes, correct=T)
chisq.test(sabado, lunes, correct=F)
df = Data.Frame()
df = DataFrame()
df = data.frame(counts=c(9,128,149,3,2,16,76,122,232,2,7,122,72,31,70,1430,51,73,77,4,2,329,14, 8,89,307,14,12,107,159,87,226,6,5,88,157,89,143,1090,79,148,140,4,4,214,21))
lunes$length
lunes
length(lunes)
rep(1, length(sabado))
rbind(c(1,2), c(2,3))
cbind(c(1,2), c(2,3))
bind(c(1,2), c(2,3))
c(c(1,2), c(2,3))
df[exp] = c(rep(1,length(sabado), rep(2, length(lunes))))
df$exp
c(rep(1,length(sabado), rep(2, length(lunes))))
c(rep(1,length(sabado)), rep(2, length(lunes)))
df[exp] = c(rep(1,length(sabado)), rep(2, length(lunes)))
df
df[exp] = c(rep(1,length(sabado)), rep(2, length(lunes)))
df$exp = c(rep(1,length(sabado)), rep(2, length(lunes)))
df
tabla = table(df)
tabla
as.table(df)
table(df)
m = as.table(rbind(sabado, lunes))
m
chisq.test(m)
as.table(df)
table(df)
chisq.test(m)$expected
df = read.table("n_n_1.txt", header=T)
head(df)
tabla = table(df)
df
setwd("C:/Users/javi/OneDrive - UNED/Master data science/repo/modelado estadistico de datos/intro")
df = read.table("n_n_1.txt", header=T)
head(df)
tabla = table(df)
df
tabla
chisq.test(tabla)$expected
m
chisq.test(m)$expected
df = data.frame(counts=c(sabado, lunes), exp=c(rep(1, length(sabado)), rep(1, length(lunes))))
df
df = data.frame(counts=c(sabado, lunes), exp=c(rep(1, length(sabado)), rep(2, length(lunes))))
df
table(df)
m = as.table(df$counts)
m
df
m = as.table(rbind(sabado, lunes))
m
chisq.test(m)
chisq.test(m)$expected
chisq.test(tabla)
tabla
round(chisq.test(tabla))
round(chisq.test(tabla), 2)
round(chisq.test(tabla)$expected, 2)
round(chisq.test(m)$expected, 2)
chisq.test(sabado, lunes)
chisq.test(sabado, lunes)$observed
chisq.test(sabado, p=lunes)
chisq.test(sabado, p=lunes, rescale.p = T)
chisq.test(m)
chisq.test(sabado, p=lunes, rescale.p = T)$expected
chisq.test(m)$expected
chisq.test(m)
fisher.test(m)
sabado = c(9,128,149,16,76,122,232,122,72,31,70,1430,51,73,77,329)
lunes = c(89,307,107,159,87,226,88,157,89,143,1090,79,148,140,214)
m = as.table(rbind(sabado, lunes))
sabado
lunes
length(sabado)
length(lunes)
sabado = c(128,149,16,76,122,232,122,72,31,70,1430,51,73,77,329)
m = as.table(rbind(sabado, lunes))
m
chisq.test(m, correct=F)
chisq.test(tabla)
chisq.test(m, correct=F)
chisq.test(m)
chisq.test(m)$observed
chisq.test(m)$expected
abs(chisq.test(m)$expected - chisq.test(m)$observed)
df = read.csv("uris.csv")
df
df = read.csv("uris.csv")
df
m1 = rbind(df$count[df$dia == "sabado 8"], df$count[df$dia == "sabado 10"])
m1
m1 = as.table(rbind(df$count[df$dia == "sabado 8"], df$count[df$dia == "sabado 10"]))
m1
df$count[df$dia == "sabado 8"]
df$count[df$dia == "sabado 3"]
df$count[df$dia == "sabado 1"]
sabado1 = df$count[df$dia == "sabado 1"]
sabado8 = df$count[df$dia == "sabado 8"]
sabado1
msabado = as.table(rbind(sabado1, sabado8))
msabado
chisq.test(msabado)
View(df)
lunes10 = df$count[df$dia == "lunes 10"]
lunes3 = df$count[df$dia == "lunes 3"]
mlunes = as.table(rbind(lunes3, lunes10))
chisq.test(mlunes)
factor(df$dia)
factor(df$uri)
df
df$uriOrdinal = c(rep(1, length(lunes10)), rep(1, length(lunes3)), rep(1, length(sabado1)), rep(1, length(sabado8)))
df$uriOrdinal = c(seq(1, length(lunes10)), seq(1, length(lunes3)), seq(1, length(sabado1)), seq(1, length(sabado8)))
write.csv(df, "uriscsv_ordinals.csv")
write.csv(df, "uriscsv_ordinals.csv", row.names=F)
df = read.csv("uriscsv_ordinals.csv", header=T)
df
unique(df$dia)
factor(df$dia)
unique(df$dia)
msabado = as.table(rbind(df$count[df$dia == "sabado 8"], df$count[df$dia == "sabado 1"]))
msabado
dimnames(msabado) = list(c("sabado 8", "sabado 1"), df$uriOrdinal[df$dia == "sabado 8"])
msabado
chisq.test(msabado)
mlunes = as.table(rbind(df$count[df$dia == "lunes 10"], df$count[df$dia == "lunes 3"]))
dimnames(mlunes) = list(c("lunes 10", "sabado 1"), df$uriOrdinal[df$dia == "lunes 3"])
chisq.test(mlunes)
mlunes = as.table(rbind(df$count[df$dia == "lunes 10"], df$count[df$dia == "lunes 3"]))
dimnames(mlunes) = list(c("lunes 10", "sabado 1"), df$uriOrdinal[df$dia == "lunes 3"])
chisq.test(mlunes)$expected
mlunes = as.table(rbind(df$count[df$dia == "lunes 10"], df$count[df$dia == "lunes 3"]))
dimnames(mlunes) = list(c("lunes 10", "sabado 1"), df$uriOrdinal[df$dia == "lunes 3"])
chisq.test(mlunes)$observed
library(esquisse)
library("esquisse")
install.packages("esquisse")
install.packages("esquisse")
install.packages("esquisse")
install.packages("esquisse")
library(ggplot2)
df
ggplot(aes(count), data = df) + geom_boxplot(fill=uriOrdinal)
ggplot(aes(count), data = df) + geom_boxplot(fill=uriOrdinal, data=df)
ggplot(aes(count), data = df) + geom_boxplot(fill=uriOrdinal)
df$uriOrdinal
ggplot(aes(count), data = df) + geom_boxplot(fill="uriOrdinal")
ggplot(aes(count), data = df) + geom_boxplot(fill=aes(uriOrdinal))
ggplot(aes("",count), data = df) + geom_boxplot()
ggplot(aes("",count), data = df) + geom_violin()
ggplot(aes(uriOrdinal,count), data = df) + geom_violin()
ggplot(aes(x=uriOrdinal,y=count), data = df) + geom_violin()
ggplot(aes(x=uriOrdinal,y=count), data = df) + geom_violin() + geom_boxplot()
ggplot(aes(x=uriOrdinal,y=count, color=uriOrdinal), data = df) + geom_violin() + geom_boxplot()
ggplot(aes(x=factor(uriOrdinal),y=count, color=uriOrdinal), data = df) + geom_violin() + geom_boxplot()
df
df$uriOrdinal = factor(df$uriOrdinal)
df$uri = factor(df$uri)
df
ggplot(aes(x=factor(uriOrdinal),y=count, color=uriOrdinal), data = df) + geom_violin() + geom_boxplot()
ggplot(aes(x=factor(uriOrdinal),y=count, color=uriOrdinal), data = df) + geom_violin() + geom_boxplot() + facet_grid(. ~ dia)
df = read.csv("uriscsv_ordinals.csv", header=T)
head(df)
msabado = as.table(rbind(df$count[df$dia == "sabado 8"], df$count[df$dia == "sabado 1"]))
dimnames(msabado) = list(c("sabado 8", "sabado 1"), df$uriOrdinal[df$dia == "sabado 8"])
chisq.test(msabado)
mlunes = as.table(rbind(df$count[df$dia == "lunes 10"], df$count[df$dia == "lunes 3"]))
dimnames(mlunes) = list(c("lunes 10", "sabado 1"), df$uriOrdinal[df$dia == "lunes 3"])
chisq.test(mlunes)
msabadolunes = as.table(rbind(df$count[df$dia == "sabado 1"], df$count[df$dia == "lunes 3"]))
dimnames(msabadolunes) = list(c("sabado 1", "lunes 3"), df$uriOrdinal[df$dia == "lunes 3"])
chisq.test(msabadolunes)
library(esquisse)
library(esquisser)
install.packages("ggraptR")
install.packages("ggraptR")
install.packages("ggraptR")
library(ggraptR)
ggraptR(initialDf = df)
ggraptR::ggraptR(initialDf = df)
install.packages("ggraptR", dependencies=T)
install.packages("ggraptR", dependencies = T)
ggraptR
library(ggraptR)
ggraptR::ggraptR(initialDf = df)
ggraptR(initialDf = df)
install.packages("esquisse", dependencies=T)
install.packages("esquisse", dependencies = T)
install.packages("esquisse", dependencies = c("Imports", "Suggests"))
install.packages("esquisse", dependencies = c("Imports", "Suggests"))
df
viernes = c(87,193,52,102,84,178,84,93,56,80,979,67,95,94,213)
library(esquisse)
library("esquisse")
vuris = df$uriOrdinal[df$dia == "sabado 8"]
vuriOrdinal = df$uriOrdinal[df$dia == "sabado 8"]
vuris = df$uri[df$dia == "sabado 8"]
df$count = c(df$count, viernes)
urisOrdinal = c(df$uriOrdinal, vuriOrdinal)
uris = c(df$uri, vuris)
counts = c(df$count, viernes)
dia = c(df$dia, rep("viernes 7"))
df2 = data.frame(uri = uris, uriOrdinal = urisOrdinal, dia = dia, count = counts)
length(uris)
length(urisOrdinal)
length(dia)
dia = c(df$dia, rep("viernes 7", length(viernes)))
df2 = data.frame(uri = uris, uriOrdinal = urisOrdinal, dia = dia, count = counts)
df2
uris
uris = c(df$uri, vuris)
uris
df$uri
df2 = data.frame(uri = df$uri[df$day == "sabado 8"], uriOrdinal = df$uriOrdinal[df$day == "sabado 8"], count = viernes, day = rep("viernes 7", length(viernes)))
df2 = data.frame(uri = df$uri[df$day == "sabado 8"], uriOrdinal = df$uriOrdinal[df$day == "sabado 8"], count = viernes, day = rep("viernes 7", length(viernes)))
df$uriOrdinal
data.frame(df)
df2 = df[dia == "sabado 8",]
df2
df2 = df[dia = "sabado 8",]
df2 = df[df$dia == "sabado 8",]
df2
df2$count = viernes
merge(df, df2)
df2
df
rbind(df, df2)
df3 = rbind(df, df2)
df3[df3$dia == "viernes 7",]
rbind(df2, df)
df2$dia
df2$dia = rep("viernes 7", length(df2$dia))
df2
rbind(df2, df)
df3 = rbind(df2, df)
mvierneslunes = as.table(rbind(df$count[df$dia == "viernes 7"], df$count[df$dia == "lunes 3"]))
dimnames(mvierneslunes) = list(c("viernes 7", "lunes 3"), df$uriNominal[df$dia == "lunes 3"])
chisq.test(mvierneslunes)
mviernessabado = as.table(rbind(df$count[df$dia == "viernes 7"], df$count[df$dia == "sabado 8"]))
dimnames(mviernessabado) = list(c("viernes 7", "sabado 8"), df$uriNominal[df$dia == "sabado 8"])
chisq.test(mviernessabado)
mviernessabado
mvierneslunes
mvierneslunes = as.table(rbind(df$count[df$dia == "viernes 7"], df$count[df$dia == "lunes 3"]))
mvierneslunes
mviernessabado = as.table(rbind(df3$count[df3$dia == "viernes 7"], df3$count[df3$dia == "sabado 8"]))
dimnames(mviernessabado) = list(c("viernes 7", "sabado 8"), df3$uriNominal[df3$dia == "sabado 8"])
chisq.test(mviernessabado)
mvierneslunes = as.table(rbind(df3$count[df3$dia == "viernes 7"], df3$count[df3$dia == "lunes 3"]))
dimnames(mvierneslunes) = list(c("viernes 7", "lunes 3"), df3$uriNominal[df3$dia == "lunes 3"])
chisq.test(mvierneslunes)
chisq.test(mviernessabado)$observed
chisq.test(mviernessabado)$expected
mviernessabado = as.table(rbind(df3$count[df3$dia == "viernes 7"], df3$count[df3$dia == "sabado 8"]))
dimnames(mviernessabado) = list(c("viernes 7", "sabado 8"), df3$uriNominal[df3$dia == "sabado 8"])
summaryvs = chisq.test(mviernessabado)
mvierneslunes = as.table(rbind(df3$count[df3$dia == "viernes 7"], df3$count[df3$dia == "lunes 3"]))
dimnames(mvierneslunes) = list(c("viernes 7", "lunes 3"), df3$uriNominal[df3$dia == "lunes 3"])
summaryvl = chisq.test(mvierneslunes)
summaryvs
summary(summaryvs)
viernes / sum(viernes)
sum(viernes / sum(viernes))
chisq.test(df$count[df$dia == "sabado 8"], p=viernes / sum(viernes))
chisq.test(df$count[df$dia == "lunes 3"], p=viernes / sum(viernes))
chisq.test(df$count[df$dia == "viernes 7"], p=viernes / sum(viernes))
chisq.test(df3$count[df3$dia == "viernes 7"], p=viernes / sum(viernes))
chisq.test(df3$count[df3$dia == "sabado 8"], p=df$count[df$dia == "sabado 3"] / sum(df$count[df$dia == "sabado 3"]))
sabado
chisq.test(df3$count[df3$dia == "sabado 8"], p=sabado / sum(sabado))
chisq.test(df3$count[df3$dia == "lunes 3"], p=lunes / sum(lunes))
chisq.test(df3$count[df3$dia == "lunes 3"], p=lunes10 / sum(lunes10))
sum(sabado)
sabado / sum(sabado)
unique(df3$dia)
write.csv(df3, "updated_uris.csv", header=T)
write.csv(df3, "updated_uris.csv")
sabado8 = df$count[df$dia == "sabado 8"]
sabado1 = df$count[df$dia == "sabado 1"]
lunes10 = df$count[df$dia == "lunes 10"]
lunes3 = df$count[df$dia == "lunes 3"]
chisq.test(sabado8, p= sabado1 / sum(sabado1))
chisq.test(sabado1, p= sabado8 / sum(sabado8))
chisq.test(lunes3, p= lunes10 / sum(lunes10))
chisq.test(lunes10, p= lunes10 / sum(lunes10))
chisq.test(sabado1, p= viernes / sum(viernes))
chisq.test(viernes, p= sabado8 / sum(sabado8))
chisq.test(sabado8, p= sabado1 / sum(sabado1))
chisq.test(sabado1, p= sabado8 / sum(sabado8))
chisq.test(lunes3, p= lunes10 / sum(lunes10))
chisq.test(lunes10, p= lunes3 / sum(lunes3))
chisq.test(sabado1, p= viernes / sum(viernes))
chisq.test(viernes, p= sabado8 / sum(sabado8))
chisq.test(lunes3, p=viernes / sum(viernes))
chisq.test(lunes3, p=viernes / sum(viernes))$observed
chisq.test(lunes3, p=viernes / sum(viernes))$expected
round(chisq.test(lunes3, p=viernes / sum(viernes))$expected,2)
round(chisq.test(lunes3, p=viernes / sum(viernes))$expected,2)
chisq.test(lunes3, p=viernes / sum(viernes))$observed
sum(chisq.test(lunes3, p=viernes / sum(viernes))$observed)
sum(chisq.test(lunes3, p=viernes / sum(viernes))$expected)
res = chisq.test(sabado1, p=lunes3 / sum(lunes3))
res
res$observed
res$expected
res$method
res2 = chisq.test(mlunessabado)
res2 = chisq.test(mlunesabado)
res2 = chisq.test(msabadolunes)
res2$method
chisq.test(lunes3, p=sabado1 / sum(sabado1))
chisq.test(lunes3, p=sabado1 / sum(sabado1))$method
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(dplyr)
install.packages("Rcpp")
library(dplyr)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2", dependencies = T)
install.packages("ggplot2", dependencies = T)
